{"version":3,"sources":["SimpleMap.jsx","App.js","reportWebVitals.js","index.js"],"names":["AnyReactComponent","text","size","style","color","SimpleMap","useState","latLng","setLatLng","hours","setHours","response","setResponse","loading","setLoading","error","setError","useEffect","length","fetch","then","status","Error","json","d","catch","reset","Dialog","open","onClose","fullScreen","IconButton","onClick","position","right","top","zIndex","DialogContent","padding","toFixed","TextField","name","value","fullWidth","type","min","max","step","variant","label","onChange","e","Number","target","backgroundColor","overflow","marginTop","display","justifyContent","alignItems","CircularProgress","AggregatedWind","margin","NOAAElevation","flexWrap","info","N","direction","E","S","W","NE","NW","SE","SW","height","width","bootstrapURLKeys","key","defaultCenter","lat","lng","defaultZoom","Region","Object","keys","map","k","App","setOpen","isReady","setStatus","className","DialogActions","Button","window","location","reload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAWMA,EAAoB,SAAC,GAAD,EAAGC,KAAH,OACxB,cAAC,IAAD,CAAcC,KAAM,GAAIC,MAAO,CAAEC,MAAO,aA6I3BC,EA1IG,WAAa,IAAD,IACAC,qBADA,mBACrBC,EADqB,KACbC,EADa,OAEFF,mBAAS,IAFP,mBAErBG,EAFqB,KAEdC,EAFc,OAGIJ,qBAHJ,mBAGrBK,EAHqB,KAGXC,EAHW,OAIEN,oBAAS,GAJX,mBAIrBO,EAJqB,KAIZC,EAJY,OAKFR,oBAAS,GALP,mBAKrBS,EALqB,KAKdC,EALc,KAO5BC,qBAAU,WACe,KAAb,OAANV,QAAM,IAANA,OAAA,EAAAA,EAAQW,UACVF,GAAS,GACTF,GAAW,GACXK,MAAM,gDAAD,OAC6CZ,EAAO,GADpD,YAC0DA,EAAO,GADjE,YACuEE,IAEzEW,MAAK,SAACT,GACL,GAAwB,MAApBA,EAASU,OACX,MAAM,IAAIC,MAAM,2BAElB,OAAOX,EAASY,UAEjBH,MAAK,SAACI,GACLZ,EAAYY,GACZV,GAAW,MAEZW,OAAM,WACLT,GAAS,GACTF,GAAW,SAGhB,CAACP,EAAQE,IAEZ,IAAMiB,EAAQ,WACZlB,IACAQ,GAAS,GACTF,GAAW,IAGb,OACE,qCACE,eAACa,EAAA,EAAD,CAAQC,OAAQrB,EAAQsB,QAASH,EAAOI,YAAU,EAAlD,UACE,cAACC,EAAA,EAAD,CACEC,QAASN,EACTvB,MAAO,CAAE8B,SAAU,WAAYC,MAAO,EAAGC,IAAK,EAAGC,OAAQ,KAF3D,SAIE,cAAC,IAAD,CAAUlC,KAAM,GAAIC,MAAO,CAAEC,MAAO,WAEtC,eAACiC,EAAA,EAAD,CAAelC,MAAO,CAAEmC,QAAS,MAAjC,UACsB,KAAb,OAAN/B,QAAM,IAANA,OAAA,EAAAA,EAAQW,SACP,uCACQX,EAAO,GAAGgC,QAAQ,GAD1B,UACqChC,EAAO,GAAGgC,QAAQ,GADvD,WACmE,IAChE9B,KAGL,cAAC+B,EAAA,EAAD,CACEC,KAAK,cACLC,MAAOjC,EACPkC,WAAS,EACTC,KAAK,SACLC,IAAI,KACJC,IAAI,MACJC,KAAK,KACLC,QAAQ,WACRC,MAAM,qBACNC,SAAU,SAACC,GAAD,OAAOzC,EAAS0C,OAAOD,EAAEE,OAAOX,WAE5C,sBACEvC,MAAO,CACLmD,gBAAiB,UACjBhB,QAAS,OACTiB,SAAU,SACVC,UAAW,IALf,UAQGzC,GACC,gNAGyD,OAG1DF,GACC,qBACEV,MAAO,CACLsD,QAAS,OACTC,eAAgB,eAChBC,WAAY,UAJhB,SAOE,cAACC,EAAA,EAAD,CAAkBzD,MAAO,CAAEC,MAAO,cAGpCS,IAAD,OAAYF,QAAZ,IAAYA,OAAZ,EAAYA,EAAUkD,iBACrB,gCACE,qBAAI1D,MAAO,CAAE2D,OAAQ,GAArB,+BACcnD,QADd,IACcA,GADd,UACcA,EAAUoD,qBADxB,aACc,EAAyBrB,MADvC,QAGA,sBACEvC,MAAO,CACLsD,QAAS,OACTO,SAAU,QAHd,UAME,cAAC,EAAD,CAAQC,KAAMtD,EAASkD,eAAeK,EAAGC,UAAU,MACnD,cAAC,EAAD,CAAQF,KAAMtD,EAASkD,eAAeO,EAAGD,UAAU,MACnD,cAAC,EAAD,CAAQF,KAAMtD,EAASkD,eAAeQ,EAAGF,UAAU,MACnD,cAAC,EAAD,CAAQF,KAAMtD,EAASkD,eAAeS,EAAGH,UAAU,MACnD,cAAC,EAAD,CAAQF,KAAMtD,EAASkD,eAAeU,GAAIJ,UAAU,OACpD,cAAC,EAAD,CAAQF,KAAMtD,EAASkD,eAAeW,GAAIL,UAAU,OACpD,cAAC,EAAD,CAAQF,KAAMtD,EAASkD,eAAeY,GAAIN,UAAU,OACpD,cAAC,EAAD,CAAQF,KAAMtD,EAASkD,eAAea,GAAIP,UAAU,sBAOhE,qBAAKhE,MAAO,CAAEwE,OAAQ,QAASC,MAAO,QAAtC,SACE,cAAC,IAAD,CACEC,iBAAkB,CAAEC,IAAK,2CACzBC,cAAe,CAAEC,IAAK,QAASC,KAAM,UACrCC,YAAa,GACblD,QAAS,SAACR,GACRhB,EAAU,CAACgB,EAAEwD,IAAKxD,EAAEyD,OALxB,SAQsB,KAAb,OAAN1E,QAAM,IAANA,OAAA,EAAAA,EAAQW,SACP,cAAC,EAAD,CACE8D,IAAKzE,EAAO,GACZ0E,IAAK1E,EAAO,GACZN,KAAK,sBAWbkF,EAAS,SAAC,GAAyB,IAAvBlB,EAAsB,EAAtBA,KAAME,EAAgB,EAAhBA,UACtB,OACE,sBAAKhE,MAAO,CAAE2D,OAAQ,EAAGP,SAAU,UAAnC,UACE,oBAAGpD,MAAO,CAAE2D,OAAQ,GAApB,wBACa,4BAAIK,OAEhBiB,OAAOC,KAAKpB,GAAMqB,KACjB,SAACC,GAAD,MACQ,QAANA,GACE,oBAAWpF,MAAO,CAAE2D,OAAQ,GAA5B,UACGyB,EADH,KACO,4BAAItB,EAAKsB,OADRA,UC/GLC,MA5Cf,WAAgB,IAAD,EACWlF,oBAAS,GADpB,mBACNsB,EADM,KACA6D,EADA,OAEgBnF,oBAAS,GAFzB,mBAENoF,EAFM,KAEGC,EAFH,KAUb,OANA1E,qBAAU,WACRE,MAAM,6CACHC,MAAK,kBAAMuE,GAAU,MACrBlE,OAAM,kBAAMkE,GAAU,QACxB,IAGD,sBAAKC,UAAU,MAAf,UACE,eAACjE,EAAA,EAAD,CAAQC,KAAMA,EAAd,UACE,cAACS,EAAA,EAAD,UACIqD,EAGA,sHAEY,IACV,+BACE,8EACA,kEAPJ,qHAYJ,cAACG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE1F,MAAM,YACN4C,QAAQ,YACRhB,QAAS,kBACN0D,EAAqCD,GAAQ,GAAnCM,OAAOC,SAASC,UAJ/B,SAOIP,EAA2B,SAAjB,sBAIlB,cAAC,EAAD,QCpCSQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhF,MAAK,YAAkD,IAA/CiF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.69006b12.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { MdLocationOn, MdCancel } from \"react-icons/md\";\nimport {\n  Dialog,\n  DialogContent,\n  TextField,\n  IconButton,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst AnyReactComponent = ({ text }) => (\n  <MdLocationOn size={42} style={{ color: \"purple\" }} />\n);\n\nconst SimpleMap = function () {\n  const [latLng, setLatLng] = useState();\n  const [hours, setHours] = useState(10);\n  const [response, setResponse] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (latLng?.length === 2) {\n      setError(false);\n      setLoading(true);\n      fetch(\n        `https://arcane-ravine-24877.herokuapp.com/v1/${latLng[0]},${latLng[1]}/${hours}`\n      )\n        .then((response) => {\n          if (response.status === 400) {\n            throw new Error(\"your error message here\");\n          }\n          return response.json();\n        })\n        .then((d) => {\n          setResponse(d);\n          setLoading(false);\n        })\n        .catch(() => {\n          setError(true);\n          setLoading(false);\n        });\n    }\n  }, [latLng, hours]);\n\n  const reset = () => {\n    setLatLng();\n    setError(false);\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <Dialog open={!!latLng} onClose={reset} fullScreen>\n        <IconButton\n          onClick={reset}\n          style={{ position: \"absolute\", right: 0, top: 0, zIndex: 100 }}\n        >\n          <MdCancel size={40} style={{ color: \"red\" }} />\n        </IconButton>\n        <DialogContent style={{ padding: \"2%\" }}>\n          {latLng?.length === 2 && (\n            <h4>\n              Lat: {latLng[0].toFixed(4)}, Lng: {latLng[1].toFixed(4)}, Hours:{\" \"}\n              {hours}\n            </h4>\n          )}\n          <TextField\n            name=\"hours-input\"\n            value={hours}\n            fullWidth\n            type=\"number\"\n            min=\"10\"\n            max=\"100\"\n            step=\"10\"\n            variant=\"outlined\"\n            label=\"Change Hour Window\"\n            onChange={(e) => setHours(Number(e.target.value))}\n          />\n          <div\n            style={{\n              backgroundColor: \"#dddbd4\",\n              padding: \"10px\",\n              overflow: \"scroll\",\n              marginTop: 10,\n            }}\n          >\n            {error && (\n              <p>\n                Sorry, something went wrong! This could happen for a couple\n                reasons. 1. This free server shuts down every 15 mins due to\n                inactivity. 2. NOAA have not updated their hourly yet.{\" \"}\n              </p>\n            )}\n            {loading && (\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-around\",\n                  alignItems: \"center\",\n                }}\n              >\n                <CircularProgress style={{ color: \"white\" }} />\n              </div>\n            )}\n            {!loading && response?.AggregatedWind && (\n              <div>\n                <h3 style={{ margin: 0 }}>\n                  Elevation: {response?.NOAAElevation?.value} m\n                </h3>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                  }}\n                >\n                  <Region info={response.AggregatedWind.N} direction=\"N\" />\n                  <Region info={response.AggregatedWind.E} direction=\"E\" />\n                  <Region info={response.AggregatedWind.S} direction=\"S\" />\n                  <Region info={response.AggregatedWind.W} direction=\"W\" />\n                  <Region info={response.AggregatedWind.NE} direction=\"NE\" />\n                  <Region info={response.AggregatedWind.NW} direction=\"NW\" />\n                  <Region info={response.AggregatedWind.SE} direction=\"SE\" />\n                  <Region info={response.AggregatedWind.SW} direction=\"SW\" />\n                </div>\n              </div>\n            )}\n          </div>\n        </DialogContent>\n      </Dialog>\n      <div style={{ height: \"100vh\", width: \"100%\" }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyCXrRQzsZ7FWq1zZcKlEWWv-QyNCst3z4g\" }}\n          defaultCenter={{ lat: 39.3438, lng: -119.9176 }}\n          defaultZoom={11}\n          onClick={(d) => {\n            setLatLng([d.lat, d.lng]);\n          }}\n        >\n          {latLng?.length === 2 && (\n            <AnyReactComponent\n              lat={latLng[0]}\n              lng={latLng[1]}\n              text=\"My Marker\"\n            />\n          )}\n        </GoogleMapReact>\n      </div>\n    </>\n  );\n};\n\nexport default SimpleMap;\n\nconst Region = ({ info, direction }) => {\n  return (\n    <div style={{ margin: 4, overflow: \"scroll\" }}>\n      <p style={{ margin: 0 }}>\n        Direction: <b>{direction}</b>\n      </p>\n      {Object.keys(info).map(\n        (k) =>\n          k !== \"Raw\" && (\n            <p key={k} style={{ margin: 0 }}>\n              {k}: <b>{info[k]}</b>\n            </p>\n          )\n      )}\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport \"./App.css\";\nimport SimpleMap from \"./SimpleMap\";\nfunction App() {\n  const [open, setOpen] = useState(true);\n  const [isReady, setStatus] = useState(false);\n\n  useEffect(() => {\n    fetch(\"https://arcane-ravine-24877.herokuapp.com\")\n      .then(() => setStatus(true))\n      .catch(() => setStatus(false));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Dialog open={open}>\n        <DialogContent>\n          {!isReady ? (\n            \"This server shut itself down due to inactivity, and it is rebooting now. Give it a few seconds and try it again.\"\n          ) : (\n            <div>\n              🎉 Server is ready! Click on the map to get wind detail on that\n              location.{\" \"}\n              <ul>\n                <li>Data is from NOAA forecast, NOT history data</li>\n                <li>You can change hour window</li>\n              </ul>\n            </div>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={() =>\n              !isReady ? window.location.reload() : setOpen(false)\n            }\n          >\n            {!isReady ? \"Try it again\" : \"Got it\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <SimpleMap />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}